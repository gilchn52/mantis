# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: "3.8"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  create-virtualenv:
    needs: build
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v2
    - uses: syphar/restore-virtualenv@v1
      id: cache-virtualenv

    - uses: syphar/restore-pip-download-cache@v1
      if: steps.cache-virtualenv.outputs.cache-hit != 'true'

    - run: pip install -r requirements.txt
      if: steps.cache-virtualenv.outputs.cache-hit != 'true'
  
  tests:
    needs: create-virtualenv
    runs-on: windows-latest
    steps:
     - uses: actions/checkout@v3
     - name: install pytest
       run:
          pip install pytest
          
     - name: Install dependencies
       run: |
         python -m pip install --upgrade pip
         pip install -r requirements.txt
         pip install flask
     - name: adding permissions
       run: |
          chmod 777 /tests --verbose
         
     - name: Test with pytest
       run: |
         python -m pytest --import-mode=append ${{ github.workspace }} 
       
        
  build_me:
     needs: tests
     runs-on: windows-latest
     steps:
       - uses: actions/checkout@v3
       
       - name: Package application
         uses: JackMcKew/pyinstaller-action-windows@main
         with:
           path: src

       - uses: actions/upload-artifact@v2
         with:
           name: name-of-artifact
           path: src/dist/windows
           
           
           
             
  
  
